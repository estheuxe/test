Виртуальное окружение
	$ mkdir myproject
	$ cd myproject
	$ python3 -m venv myvenv 
	$ source myvenv/bin/activate
	$ deactivate

Для сохранения листа данного окружения: 
	$ pip3 freeze > requirements.txt
Установить:
	$ pip3 install -r requirements.txt
Посмотреть что установлено в окружении
	$ pip3 freeze

py djangoapp
	https://docs.djangoproject.com/en/2.2/intro/tutorial01/
	$ django-admin startproject projectname
	$ python3 manage.py migrate
	$ python3 manage.py runserver 1337
	$ python3 manage.py startapp appname

print(json.dumps(response.json(), indent=2))

#idBoard = '5d81c5e6ecf65d36ef777b70'		# board "MyBoard"
#idList = '5d81c5e68f079e461725ca0b'		# list  "In progress"

#response = requests.request("GET", getActions.format(boardId=idBoard), params=querystring)

good guide for SQLAlchemy
	https://lectureswww.readthedocs.io/6.www.sync/2.codding/9.databases/2.sqlalchemy/0.engine.html

sql stmts
	https://lectureswww.readthedocs.io/6.www.sync/2.codding/9.databases/2.sqlalchemy/2.sql_expressions.html

Pабота с моделями в django
	https://metanit.com/python/django/5.4.php

Serializers/ working with API
	https://github.com/encode/django-rest-framework
how to
	https://webdevblog.ru/sozdanie-django-api-ispolzuya-django-rest-framework-apiview/

HTTP methods documentation RFC
	https://tools.ietf.org/html/rfc7231#section-4.3

params = {
	'type': yandex|trello
}

localhost:1337/auth/cards
localhost:1337/auth/boards

./ngrok http 8445

taskeditproject > taskedit

auth > boards
auth > lists
auth > cards

status_codesss
	https://www.django-rest-framework.org/api-guide/status-codes/

	https://www.jetbrains.com/help/youtrack/standalone/rest-api-reference.html

Паттерны python
	https://refactoring.guru/ru/design-patterns/python


____________________________________________________________________________________________________________
''' Выводит все Agile Boards с состояниями, их id & name & desc '''

idOfAgileBoards = 'https://estheuxework.myjetbrains.com/youtrack/api/admin/customFieldSettings/bundles/state'
yq = {
	'fields': 'id,name,values(id,name,description)'
}
return requests.request('GET', idOfAgileBoards, params=yq, headers=s.YT_HEADERS)


''' Выводит все состояния определенной эджайл доски '''

idOfAgileBoards = 'https://estheuxework.myjetbrains.com/youtrack/api/admin/customFieldSettings/bundles/state/{id}'
yq = {
	'fields': 'id,name,values(name,id,ordinal)'
}
return requests.request('GET', idOfAgileBoards.format(id='84-3'), params=yq, headers=s.YT_HEADERS)


''' Выводит все эджайл доски '''

idAgile = 'https://estheuxework.myjetbrains.com/youtrack/api/agiles'
yq = {
	'fields': 'id,name'
}
return requests.request('GET', idAgile, params=yq, headers=s.YT_HEADERS)


''' WEBHOOKS__________________________________________________________________________________
setWebhook = "https://api.trello.com/1/tokens/{token}/webhooks/?key={key}"

paramsForWH = {
	'callbackURL': '',
	'idModel': idList,
	'description': 'First Webhook',
}
'''

# a = requests.request("DELETE", setWebhook.format(token=, key=), params=paramsForWH)

# print(a.status_code)
# print(json.dumps(a.json(), indent=4))

''' check webhooks 
hoba = requests.request("GET", setWebhook.format(token=, key=))

print(hoba.status_code)

print(json.dumps(hoba.json(), indent=2))
'''